// ОСНОВЫ JavaScript
// Урок 019. Функции, стрелочные функции(ES6).


// Обьявление функции и передача в нее аргумента.
// Аргументов у функции может быть бесконечно много.

let num = 20;

function showMyMessage(text){
    console.log(text);
    num = 10;
}
showMyMessage('hello!');

// Переменная, созданная внутри блока не будет видна за его пределами.
// Такая переменная называется локальной.

// Любая функция может использовать глобальную перменную.
// Глобальную перменную можно перезаписать внутри функции.

// Замыкание функции - это сама функция, со всеми переменными, которые ей доступны.
// Когда функция видит внутри себя перменную, она сначала ищет эту переменную
// внутри себя и, если не находит, то поднимается на уровень выше.

// Любая функция возвращает какое-то значение. Можно использовать return,
// чтобы получить результат работы.
// После return функция прекращает свое выполнение.

function ret(){
    let num = 44;
    return num;
}

const anotherNum = ret(); // Записываем результат функции в переменную.
console.log(anotherNum);

//**************************** КЛАССИФИКАЦИя ФУНКЦИЙ ****************************

// function declaration - мы ее использовали выше.
// Создается до начала выполнения скрипта, можно вызвать перед обьявлением.

funDec();

function funDec(){
    console.log('im function declaration!');
}

// function expression - функциональное выражение.
// Создается только тогда, когда доходит поток кода, можно вызвать только после обьявления.

let fooExx = function(){
    console.log('im function expression!');    
};
fooExx();

// стрелочная функция.
// Не имеет своего контакста.

const calc = (a, b) => a + b;

// Упрощает код. Использовать можно не везде. Имеет свое применение.